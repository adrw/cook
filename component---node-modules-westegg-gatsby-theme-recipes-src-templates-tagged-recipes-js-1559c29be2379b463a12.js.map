{"version":3,"sources":["webpack:///./node_modules/@westegg/gatsby-theme-recipes/src/templates/taggedRecipes.js","webpack:///./node_modules/@westegg/gatsby-theme-recipes/src/components/RecipeCard.js","webpack:///./node_modules/@westegg/gatsby-theme-recipes/src/components/RecipeGrid.js","webpack:///./node_modules/@westegg/gatsby-theme-recipes/src/components/Pagination.js","webpack:///./node_modules/@westegg/gatsby-theme-recipes/src/components/Tags.js","webpack:///./node_modules/@westegg/gatsby-theme-recipes/src/components/PageIntro.js"],"names":["query","RecipesTemplate","data","allMdx","nodes","recipes","tags","pageContext","currentPage","numPages","tag","useSiteMetadata","intro","title","image","basePath","group","imageWrapperStyles","RecipeCard","recipe","slug","props","a","as","Link","to","css","theme","colors","background","grey","primary","text","fontSizeFive","fontSizes","fluid","sharp","sizes","md","lg","RecipeGrid","length","div","createGridTemplate","map","index","name","frontmatter","key","ulCSS","buttonCSS","space","muted","Pagination","isFirst","isLast","prevPage","toString","prevPagePath","nextPage","nextPagePath","isOnePage","aria-label","componentCSS","rel","size","variant","Array","from","_","i","linkCSS","Tags","activeClassName","partiallyActive","PageIntro","children","p"],"mappings":"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","file":"component---node-modules-westegg-gatsby-theme-recipes-src-templates-tagged-recipes-js-1559c29be2379b463a12.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport SEO from \"../components/SEO\"\nimport PageLayout from \"../components/PageLayout\"\nimport RecipeGrid from \"../components/RecipeGrid\"\nimport useSiteMetadata from \"../hooks/use-sitemetadata\"\nimport Tags from \"../components/Tags\"\nimport PageIntro from \"../components/PageIntro\"\nimport Pagination from \"../components/Pagination\"\n\nexport const query = graphql`\n  query($tag: String!, $skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { order: DESC, fields: frontmatter___date }\n      filter: { frontmatter: { tags: { eq: $tag } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        ...IndexRecipeFragment\n      }\n    }\n    tags: allMdx {\n      group(field: frontmatter___tags) {\n        tag: fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nconst RecipesTemplate = ({\n  data: {\n    allMdx: { nodes: recipes = [] },\n    tags\n  },\n  pageContext: { currentPage, numPages, tag }\n}) => {\n  const { intro, title, image, basePath } = useSiteMetadata()\n  return (\n    <>\n      <SEO title={title} image={image} />\n      <PageLayout>\n        <PageIntro>{intro}</PageIntro>\n        <Tags tags={tags.group} />\n        <RecipeGrid recipes={recipes} />\n        <Pagination\n          currentPage={currentPage}\n          numPages={numPages}\n          basePath={`${basePath}tags/${tag}/`}\n        />\n      </PageLayout>\n    </>\n  )\n}\n\nexport default RecipesTemplate\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\"\nimport { Styled } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst componentStyles = ({\n  colors: { background, grey, primary, text },\n  fontSizes: [, , , , fontSizeFive]\n}) =>\n  css`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    color: ${text};\n    background: ${grey};\n    width: 100%;\n    height: 100%;\n    text-decoration: none;\n    font-size: ${fontSizeFive};\n    letter-spacing: 1px;\n    box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.1);\n    transition: 0.5s ease-in-out;\n    will-change: auto;\n    overflow: hidden;\n\n    &:hover,\n    &:focus {\n      color: ${text};\n    }\n\n    &:hover {\n      img {\n        transform: scale(1.1);\n      }\n    }\n  `\n\nconst imageWrapperStyles = css`\n  flex: 0 1 80%;\n\n  .gatsby-image-wrapper {\n    box-shadow: 0 0 2px 0 rgba(0, 0, 0, 0.1);\n    height: 100%;\n    > div {\n      padding-bottom: 0 !important;\n    }\n\n    img {\n      will-change: auto;\n      transition: 0.6s ease-out !important;\n      transform-origin: center;\n    }\n  }\n`\n\nconst titleWrapperStyles = ({ fontSizes, sizes }) => css`\n  text-transform: capitalize;\n  font-size: ${fontSizes[3]};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  flex: 1 1 50px;\n\n  @media (min-width: ${sizes.md}px) {\n    font-size: ${fontSizes[2]};\n  }\n\n  @media (min-width: ${sizes.lg}px) {\n    font-size: ${fontSizes[3]};\n  }\n`\n\nconst RecipeCard = ({ recipe: { title, slug, image }, ...props }) => {\n  return (\n    <Styled.a\n      as={Link}\n      to={`/${slug}`}\n      css={theme => componentStyles(theme)}\n      {...props}\n    >\n      <div css={imageWrapperStyles}>\n        <Img fluid={image.sharp.fluid} />\n      </div>\n      <div css={theme => titleWrapperStyles(theme)}>{title}</div>\n    </Styled.a>\n  )\n}\n\nexport default RecipeCard\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\"\nimport { Styled } from \"theme-ui\"\nimport { graphql } from \"gatsby\"\n\nimport RecipeCard from \"../components/RecipeCard\"\n\nconst createGridTemplate = length => {\n  switch (length) {\n    case 1:\n      return `\"i1 i1 i1\"\n              \"i1 i1 i1\"\n              \"i1 i1 i1\"`\n    case 2:\n      return `\"i1 i1 i2\"\n              \"i1 i1 i2\"`\n    case 3:\n      return `\"i1 i1 i1\"\n              \"i1 i1 i1\"\n              \"i2 i3 i3\"\n              \"i2 i3 i3\"`\n    case 4:\n      return `\"i1 i1 i2\"\n              \"i1 i1 i2\"\n              \"i3 i4 i4\"\n              \"i3 i4 i4\"`\n    case 5:\n      return `\"i1 i2 i3\"\n              \"i1 i2 i3\"\n              \"i4 i2 i5\"\n              \"i4 i2 i5\"`\n    case 6:\n      return `\"i1 i1 i2\"\n              \"i1 i1 i2\"\n              \"i3 i4 i4\"\n              \"i3 i4 i4\"\n              \"i5 i5 i6\"\n              \"i5 i5 i6\"`\n    case 7:\n      return `\"i1 i1 i2\"\n              \"i1 i1 i2\"\n              \"i3 i4 i4\"\n              \"i3 i4 i4\"\n              \"i5 i5 i6\"\n              \"i5 i5 i6\"\n              \"i7 i7 i7\"\n              \"i7 i7 i7\"`\n    case 8:\n      return `\"i1 i1 i2\"\n              \"i1 i1 i2\"\n              \"i3 i4 i4\"\n              \"i3 i4 i4\"\n              \"i5 i5 i6\"\n              \"i5 i5 i6\"\n              \"i7 i8 i8\"\n              \"i7 i8 i8\"`\n    case 9:\n      return `\"i1 i1 i2\"\n              \"i1 i1 i2\"\n              \"i3 i4 i4\"\n              \"i3 i4 i4\"\n              \"i5 i5 i6\"\n              \"i5 i5 i6\"\n              \"i7 i8 i8\"\n              \"i7 i8 i8\"\n              \"i9 i9 i9\"\n              \"i9 i9 i9\"`\n    case 10:\n      return `\"i1 i2 i3\"\n              \"i1 i2 i3\"\n              \"i4 i2 i5\"\n              \"i4 i2 i5\"\n              \"i6 i7 i8\"\n              \"i6 i7 i8\"\n              \"i9 i7 i10\"\n              \"i9 i7 i10\"`\n    case 11:\n      return `\"i1 i2 i3\"\n              \"i1 i2 i3\"\n              \"i4 i2 i5\"\n              \"i4 i2 i5\"\n              \"i6 i7 i8\"\n              \"i6 i7 i8\"\n              \"i9 i7 i10\"\n              \"i9 i7 i10\"\n              \"i9 i11 i11\"\n              \"i9 i11 i11\"`\n    default:\n      return `\"i1 i1 i2\"\n              \"i1 i1 i2\"\n              \"i3 i4 i4\"\n              \"i3 i4 i4\"\n              \"i5 i5 i6\"\n              \"i5 i5 i6\"\n              \"i7 i8 i8\"\n              \"i7 i8 i8\"\n              \"i9 i9 i10\"\n              \"i9 i9 i10\"\n              \"i11 i12 i12\"\n              \"i11 i12 i12\"`\n  }\n}\n\nconst gridParentCSS = length => css`\n  padding-top: 200px;\n  clear: both;\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-auto-rows: 200px;\n  grid-gap: 1rem;\n  padding-top: 40px;\n\n  @media (min-width: 520px) {\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  }\n\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-areas: ${createGridTemplate(length)};\n    grid-auto-rows: 160px;\n  }\n`\n\nconst gridItem = name =>\n  css`\n    @media (min-width: 768px) {\n      grid-area: ${name};\n    }\n  `\n\nconst RecipeGrid = ({ recipes = [] }) => {\n  return (\n    <Styled.div css={gridParentCSS(recipes.length)}>\n      {recipes.length > 0 &&\n        recipes.map(({ frontmatter: { title, slug, image } }, index) => {\n          return (\n            <RecipeCard\n              key={slug}\n              recipe={{ title, slug, image }}\n              css={gridItem(`i${index + 1}`)}\n            />\n          )\n        })}\n    </Styled.div>\n  )\n}\n\nexport default RecipeGrid\n\nexport const query = graphql`\n  fragment IndexRecipeFragment on Mdx {\n    frontmatter {\n      title\n      slug\n      image {\n        sharp: childImageSharp {\n          fluid(quality: 75, maxWidth: 960) {\n            ...GatsbyImageSharpFluid_withWebp\n          }\n        }\n      }\n    }\n  }\n`\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\"\nimport { Fragment } from \"react\"\nimport { Link } from \"gatsby\"\nimport { Button } from \"@marinda/react-styled-buttons\"\n\nimport StyledLink from \"../components/StyledLink\"\n\nconst componentCSS = theme => css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${theme.space[5]}px 0 ${theme.space[2]}px;\n`\n\nconst ulCSS = css`\n  padding: 0;\n`\n\nconst linkCSS = theme => css`\n  position: relative;\n  display: inline-block;\n  padding: 0 ${theme.space[1]}px 0 ${theme.space[2]}px;\n  margin: 0 ${theme.space[1]}px;\n  text-decoration: none;\n  list-style: none;\n\n  &:after {\n    position: absolute;\n    top: 0;\n    right: -${theme.space[2]}px;\n    content: \"|\";\n    display: block;\n  }\n\n  &:last-child {\n    &:after {\n      display: none;\n    }\n  }\n`\n\nconst buttonCSS = theme => css`\n  text-decoration: none;\n  margin: 0 ${theme.space[3]}px;\n  text-transform: capitalize;\n  color: ${theme.colors.text};\n  background: ${theme.colors.muted};\n\n  &:hover {\n    color: ${theme.colors.background};\n    background: ${theme.colors.primary};\n  }\n\n  &.active {\n    color: ${theme.colors.background};\n    background: ${theme.colors.primary};\n  }\n\n  &:focus {\n    box-shadow: 0 0px 8px ${theme.colors.primary},\n      0 0px 8px ${theme.colors.primary};\n  }\n`\n\nconst Pagination = ({ currentPage, numPages, basePath = \"/\" }) => {\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? \"\" : (currentPage - 1).toString()\n  const prevPagePath = `${basePath}${prevPage}`\n  const nextPage = (currentPage + 1).toString()\n  const nextPagePath = `${basePath}${nextPage}`\n  const isOnePage = isFirst && isLast\n\n  return (\n    <Fragment>\n      {!isOnePage && (\n        <nav aria-label=\"pagination\" css={theme => componentCSS(theme)}>\n          {!isFirst && (\n            <Button\n              as={Link}\n              to={prevPagePath}\n              rel=\"prev\"\n              size=\"small\"\n              css={theme => buttonCSS(theme)}\n              variant=\"primary\"\n            >\n              ← Previous Page\n            </Button>\n          )}\n          <ul css={ulCSS}>\n            {Array.from({ length: numPages }, (_, i) => (\n              <li\n                css={theme => linkCSS(theme)}\n                key={`pagination-number${i + 1}`}\n              >\n                <StyledLink to={`${basePath}${i === 0 ? \"\" : i + 1}`}>\n                  {i + 1}\n                </StyledLink>\n              </li>\n            ))}\n          </ul>\n          {!isLast && (\n            <Button\n              as={Link}\n              to={nextPagePath}\n              rel=\"next\"\n              size=\"small\"\n              css={theme => buttonCSS(theme)}\n              variant=\"primary\"\n            >\n              Next Page →\n            </Button>\n          )}\n        </nav>\n      )}\n    </Fragment>\n  )\n}\nexport default Pagination\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\"\nimport { Link } from \"gatsby\"\nimport { Button } from \"@marinda/react-styled-buttons\"\n\nconst componentCSS = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`\n\nconst buttonCSS = theme => css`\n  text-decoration: none;\n  text-transform: capitalize;\n  margin: 0 8px;\n  color: ${theme.colors.text};\n  background: ${theme.colors.muted};\n  margin-bottom: 10px;\n\n  &:hover {\n    color: ${theme.colors.background};\n    background: ${theme.colors.primary};\n  }\n\n  &.active {\n    color: ${theme.colors.background};\n    background: ${theme.colors.primary};\n  }\n\n  &:focus {\n    box-shadow: 0 0px 8px ${theme.colors.primary},\n      0 0px 8px ${theme.colors.primary};\n  }\n`\n\nconst Tags = ({ basePath = \"/\", tags = [] }) => {\n  return (\n    <nav css={componentCSS}>\n      {\n        <Button\n          key=\"all\"\n          css={theme => buttonCSS(theme)}\n          as={Link}\n          to={basePath}\n          size=\"small\"\n          activeClassName=\"active\"\n        >\n          All\n        </Button>\n      }\n      {tags &&\n        tags.map(({ tag }) => (\n          <Button\n            key={tag}\n            css={theme => buttonCSS(theme)}\n            as={Link}\n            to={`/tags/${tag}`}\n            size=\"small\"\n            partiallyActive={true}\n            activeClassName=\"active\"\n          >\n            {tag}\n          </Button>\n        ))}\n    </nav>\n  )\n}\n\nexport default Tags\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\"\nimport { Styled } from \"theme-ui\"\n\nconst PageIntro = ({ children }) => {\n  return (\n    <Styled.p\n      css={theme =>\n        css`\n          text-align: center;\n          padding: 0 0 ${theme.space[3]}px;\n          text-align: center;\n          margin: 0 auto ${theme.space[3]}px;\n        `\n      }\n    >\n      {children}\n    </Styled.p>\n  )\n}\n\nexport default PageIntro\n"],"sourceRoot":""}