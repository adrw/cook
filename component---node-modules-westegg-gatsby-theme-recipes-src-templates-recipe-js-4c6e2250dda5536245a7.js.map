{"version":3,"sources":["webpack:///./node_modules/@westegg/gatsby-theme-recipes/src/components/StyledParagraph.js","webpack:///./node_modules/@westegg/gatsby-theme-recipes/src/components/BackLink.js","webpack:///./node_modules/@westegg/gatsby-theme-recipes/src/components/ListItem.js","webpack:///./node_modules/@westegg/gatsby-theme-recipes/src/components/MarkdownLayout.js","webpack:///./node_modules/@westegg/gatsby-theme-recipes/src/components/CoverImage.js","webpack:///./node_modules/@westegg/gatsby-theme-recipes/src/templates/recipe.js","webpack:///./node_modules/@westegg/gatsby-theme-recipes/src/components/PageLink.js","webpack:///./node_modules/@westegg/gatsby-theme-recipes/node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@westegg/gatsby-theme-recipes/node_modules/gatsby-plugin-mdx/index.js"],"names":["StyledParagraph","props","p","sx","width","maxWidth","variant","BackLink","path","children","to","size","css","aria-hidden","ListItem","components","h1","Styled","h2","h3","h4","h5","table","tr","th","ul","a","PageLink","MarkdownLayout","basePath","useSiteMetadata","PageLayout","componentStyles","CoverImage","image","alt","variants","initial","transform","transformOrigin","enter","transition","duration","delay","when","exit","div","animate","fluid","sharp","query","RecipeTemplate","data","mdx","body","frontmatter","title","date","SEO","src","PageTransition","as","React","require","useMDXComponents","useMDXScope","module","scope","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","MDXRenderer"],"mappings":"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","file":"component---node-modules-westegg-gatsby-theme-recipes-src-templates-recipe-js-4c6e2250dda5536245a7.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Styled } from \"theme-ui\"\n\nconst StyledParagraph = props => (\n  <Styled.p\n    sx={{\n      width: \"100%\",\n      maxWidth: \"none !important\",\n      variant: \"text.large\"\n    }}\n    {...props}\n  />\n)\nexport default StyledParagraph\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\"\n\nimport StyledLink from \"../components/StyledLink\"\n\nconst BackLink = ({ path = \"/\", children }) => {\n  return (\n    <StyledLink\n      to={path}\n      size=\"small\"\n      css={css`\n        align-self: flex-start;\n      `}\n    >\n      <span aria-hidden>{\"<\"} </span> <span>{children}</span>\n    </StyledLink>\n  )\n}\n\nexport default BackLink\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\n\nconst ListItem = ({ children }) => (\n  <span\n    sx={{\n      width: \"70%\",\n      variant: \"listItem.ingredient\"\n    }}\n  >\n    {children}\n  </span>\n)\nexport default ListItem\n","/** @jsx jsx */\nimport { jsx, Styled } from \"theme-ui\"\nimport { MDXProvider } from \"@mdx-js/react\"\n\nimport PageLayout from \"../components/PageLayout\"\nimport BackLink from \"../components/BackLink\"\nimport StyledParagraph from \"./StyledParagraph\"\nimport ListItem from \"./ListItem\"\nimport useSiteMetadata from \"../hooks/use-sitemetadata\"\nimport PageLink from \"./PageLink\"\n\nconst components = {\n  h1: Styled.h1,\n  h2: Styled.h2,\n  h3: Styled.h3,\n  h4: Styled.h4,\n  h5: Styled.h5,\n  table: Styled.table,\n  tr: Styled.tr,\n  th: Styled.th,\n  ul: Styled.ul,\n  p: Styled.p,\n  StyledParagraph,\n  ListItem,\n  a: PageLink\n}\n\nconst MarkdownLayout = ({ children }) => {\n  const { basePath } = useSiteMetadata()\n  return (\n    <MDXProvider components={components}>\n      <PageLayout>\n        <BackLink path={basePath}>Back to recipes</BackLink>\n        <div sx={{ variant: \"markdownWrappers.recipes\" }}>{children}</div>\n      </PageLayout>\n    </MDXProvider>\n  )\n}\n\nexport default MarkdownLayout\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\"\nimport Img from \"gatsby-image\"\nimport { motion, AnimatePresence } from \"framer-motion\"\n\nconst componentStyles = css`\n  float: right;\n  position: relative;\n  width: 60%;\n  clip-path: circle(45%);\n  shape-outside: circle(54%);\n  overflow: hidden;\n  @media (min-width: 420px) {\n    width: 50%;\n  }\n  .gatsby-image-wrapper {\n    width: 100%;\n    height: 100%;\n    > div {\n      padding-bottom: 100% !important;\n    }\n  }\n`\n\nconst CoverImage = ({ image, alt = \"\", ...props }) => {\n  const duration = 3\n  const delay = 0.2\n\n  const variants = {\n    initial: {\n      transform: \"scale(1.1)\",\n      transformOrigin: \"center\"\n    },\n    enter: {\n      transform: \"scale(1)\",\n      transition: {\n        duration,\n        delay,\n        when: \"beforeChildren\"\n      }\n    },\n    exit: {\n      transform: \"scale(1.1)\",\n      transition: { duration }\n    }\n  }\n  return (\n    <AnimatePresence>\n      <div css={componentStyles}>\n        <motion.div\n          variants={variants}\n          initial=\"initial\"\n          animate=\"enter\"\n          exit=\"exit\"\n          {...props}\n        >\n          <Img fluid={image.sharp.fluid} alt={alt} />\n        </motion.div>\n      </div>\n    </AnimatePresence>\n  )\n}\n\nexport default CoverImage\n","/** @jsx jsx */\nimport { jsx, Styled } from \"theme-ui\"\nimport { graphql } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nimport SEO from \"../components/SEO\"\nimport MarkdownLayout from \"../components/MarkdownLayout\"\nimport CoverImage from \"../components/CoverImage\"\nimport PageTransition from \"../components/PageTransition\"\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        image {\n          sharp: childImageSharp {\n            fluid(quality: 90, maxWidth: 960) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n      body\n    }\n  }\n`\n\nconst RecipeTemplate = ({\n  data: {\n    mdx: {\n      body,\n      frontmatter: { title, date, image }\n    }\n  }\n}) => {\n  return (\n    <article>\n      <SEO title={title} image={image.sharp.fluid.src} />\n      <MarkdownLayout>\n        <PageTransition>\n          <CoverImage image={image} alt={title} />\n          <Styled.h1>{title}</Styled.h1>\n          <time sx={{ variant: \"text.small\" }}>{date}</time>\n          <MDXRenderer>{body}</MDXRenderer>\n        </PageTransition>\n      </MarkdownLayout>\n    </article>\n  )\n}\n\nexport default RecipeTemplate\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\"\nimport StyledLink from \"./StyledLink\"\n\nconst PageLink = ({ children, ...props }) => {\n  return (\n    <StyledLink\n      as=\"a\"\n      css={css`\n        display: inline;\n        text-decoration: underline;\n        word-break: break-word;\n        &::before {\n          display: none;\n        }\n      `}\n      {...props}\n    >\n      {children}\n    </StyledLink>\n  )\n}\n\nexport default PageLink\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n"],"sourceRoot":""}